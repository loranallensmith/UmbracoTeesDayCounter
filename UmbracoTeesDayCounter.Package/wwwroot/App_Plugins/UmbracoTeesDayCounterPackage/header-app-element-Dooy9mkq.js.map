{"version":3,"file":"header-app-element-Dooy9mkq.js","sources":["../../../Client/src/elements/header-app-element.ts"],"sourcesContent":["import type { CSSResultGroup } from '@umbraco-cms/backoffice/external/lit';\nimport { css, html, customElement, state } from '@umbraco-cms/backoffice/external/lit';\nimport { UmbHeaderAppButtonElement } from '@umbraco-cms/backoffice/components';\n\nconst elementName = 'h5yr-umbraco-tees-header-app';\n@customElement(elementName)\nexport class UmbracoTeesHeaderAppElement extends UmbHeaderAppButtonElement {\n\t// @state()\n\t// private _popoverOpen = false;\n\n    @state()\n    private _dates: string[] = [];\n\n    @state()\n    private _timeLeft: number = 0;\n\n    private timerInterval: number | null = null;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Fetch the dateFile from https://github.com/OwainWilliams/UmbracoTeesDay/raw/refs/heads/main/datesFolder/dates.json\n        fetch('https://api.github.com/repos/OwainWilliams/UmbracoTeesDay/contents/datesFolder/dates.json')\n            .then(response => response.json())\n            .then(data => {\n                const decodedContent = atob(data.content);\n                this._dates = JSON.parse(decodedContent);\n                this._timeLeft = (Date.parse(this.#findClosestDate()) - Date.now())/ 1000;\n            })\n            .catch(error => console.error(error));\n\t}\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.#startCountdown();\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.#stopCountdown();\n    }\n\n    #startCountdown() {\n        if (this.timerInterval) return; // Prevent multiple intervals\n        \n        this.timerInterval = setInterval(() => {\n            if (this._timeLeft > 0) {\n                this._timeLeft -= 1;\n            } else {\n                this.#stopCountdown();\n            }\n          }, 1000);\n    }\n\n    #stopCountdown() {\n        if (this.timerInterval) {\n            clearInterval(this.timerInterval);\n            this.timerInterval = null;\n        }\n    }\n\n    get formattedTimeLeft() {\n        let seconds = Math.floor(this._timeLeft);\n        const weeks = Math.floor(seconds / (60 * 60 * 24 * 7));\n        seconds %= 60 * 60 * 24 * 7;\n        const days = Math.floor(seconds / (60 * 60 * 24));\n        seconds %= 60 * 60 * 24;\n        const hours = Math.floor(seconds / (60 * 60));\n        seconds %= 60 * 60;\n        const minutes = Math.floor(seconds / 60);\n        seconds %= 60;\n\n        return { weeks, days, hours, minutes, seconds };\n    }\n\n\t#onPopoverToggle(event: ToggleEvent) {\n\t\t// TODO: This ignorer is just needed for JSON SCHEMA TO WORK, As its not updated with latest TS jet.\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tthis._popoverOpen = event.newState === 'open';\n\t}\n\n    #findClosestDate() {\n        var now = new Date();\n        var closestDate = this._dates[0];\n        \n        for (var i = 1; i < this._dates.length; i++) {\n            var currentDate = Date.parse(this._dates[i]);\n\t\t\tif (currentDate > now.getTime() && currentDate < Date.parse(closestDate)) {\n            closestDate = this._dates[i];\n            }\n        }\n        return closestDate;\n    }\n\n    #shouldSparkle() {\n        return this._timeLeft <= 1000 * 60 * 60 * 24 * 14;\n    }\n\n\toverride render() {\n\t\treturn html` ${this.#renderButton()} ${this.#renderPopover()} `;\n\t}\n\n\t#renderButton() {\n\n\t\treturn html`\n\t\t\t<uui-button popovertarget=\"tees-menu-popover\" look=\"primary\" label=\"help\" class=${this.#shouldSparkle() ? 'sparkle' : ''} compact>\n\t\t\t\t<uui-icon name=\"icon-t-shirt\"></uui-icon>\n\t\t\t</uui-button>\n\t\t`;\n\t}\n\n\t#renderPopover() {\n\t\treturn html`\n\t\t\t<uui-popover-container id=\"tees-menu-popover\" @toggle=${this.#onPopoverToggle}>\n\t\t\t\t<umb-popover-layout>\n\t\t\t\t\t<uui-scroll-container>\n\t\t\t\t\t\t<div>\n                            ${this.#renderInfo()}\n                        </div>\n                        <div>\n                            <small>\n                                Visit the <a href=\"https://umbracocommunity.store\" target=\"_blank\">Umbraco Community Store</a> and get yours today!\n                            </small>\n                        </div>\n\t\t\t\t\t</uui-scroll-container>\n\t\t\t\t</umb-popover-layout>\n\t\t\t</uui-popover-container>\n\t\t`;\n\t}\n\n    #renderInfo() {\n            const closestDate = this.#findClosestDate();\n        \n            // Check if the closest date is today\n            var today = new Date();\n            today.setHours(0, 0, 0, 0);\n        \n            var closestDateTime = new Date(closestDate);\n            closestDateTime.setHours(0, 0, 0, 0);\n        \n            if (closestDateTime.getTime() === today.getTime()) {\n                // It's today\n                return this.#renderTodayIsTheDay();\n            }\n        \n            // Calculate the countdown for the closest date\n            var future = Date.parse(closestDate);\n            var now = new Date();\n        \n            if (isNaN(future) || future <= now.getTime()) {\n                return this.#renderNothingScheduled();\n            }\n            \n            return this.#renderComingSoonCountdown();\n        }\n\n    #renderNothingScheduled() {\n        return html`<p>There's not an upcoming Umbraco Tees at the moment, check back soon!</p>`;\n    }\n\n    #renderTodayIsTheDay() {\n        return html`<p>Today is Umbraco Tees Day!</p>`;\n    }\n\n    #renderComingSoonCountdown() {\n        const { weeks, days, hours, minutes, seconds } = this.formattedTimeLeft;\n        const formattedClosestDate = new Date(this.#findClosestDate()).toLocaleDateString('en-GB', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n        \n        return html`\n            <p>The next Umbraco Tees Day is happening in:</p>\n            <p><b>\n                ${weeks > 0 ? html`${weeks}<span> weeks</span>` : ''}\n                ${days > 0 ? html`${days}<span> days, </span>` : ''}\n                ${hours > 0 ? html`${hours}<span> hours, </span>` : ''}\n                ${minutes}<span> minutes, and </span>\n                ${seconds}<span> seconds </span>\n            </b></p>\n            <p>on ${formattedClosestDate}.</p>\n        `\n    }\n\n\tstatic override styles: CSSResultGroup = [UmbHeaderAppButtonElement.styles, css`\n        uui-popover-container div {\n            padding: 1em 16px;\n            text-align: center;\n        }\n\n        /* Sparkle effect applied when countdown is under two weeks */\n        .sparkle::before,\n        .sparkle::after {\n        content: \"\";\n        position: absolute;\n        width: 2px;\n        height: 2px;\n        background: rgba(255, 255, 200, 0.9);\n        border-radius: 50%;\n        box-shadow: \n            0px 0px 8px 2px rgba(255, 255, 200, 0.8),\n            2px 2px 4px rgba(255, 255, 150, 0.5);\n        animation: sparkle-animation 1.5s infinite ease-in-out alternate;\n        }\n\n        .sparkle::before {\n        top: 3px;\n        left: 6px;\n        animation-delay: 0s;\n        }\n\n        .sparkle::after {\n        bottom: 5px;\n        right: 5px;\n        animation-delay: 0.75s;\n        }\n\n        @keyframes sparkle-animation {\n        0% {\n            transform: scale(0.8);\n            opacity: 0.8;\n        }\n        50% {\n            transform: scale(1.2);\n            opacity: 1;\n        }\n        100% {\n            transform: scale(0.6);\n            opacity: 0.6;\n        }\n        }\n        `];\n}\n\nexport { UmbracoTeesHeaderAppElement as element };\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t[elementName]: UmbracoTeesHeaderAppElement;\n\t}\n}"],"names":["_UmbracoTeesHeaderAppElement_instances","startCountdown_fn","stopCountdown_fn","onPopoverToggle_fn","findClosestDate_fn","shouldSparkle_fn","renderButton_fn","renderPopover_fn","renderInfo_fn","renderNothingScheduled_fn","renderTodayIsTheDay_fn","renderComingSoonCountdown_fn","elementName","UmbracoTeesHeaderAppElement","UmbHeaderAppButtonElement","__privateAdd","response","data","decodedContent","__privateMethod","error","seconds","weeks","days","hours","minutes","html","event","now","closestDate","i","currentDate","today","closestDateTime","future","formattedClosestDate","css","__decorateClass","state","customElement"],"mappings":";;;;;;;;8OAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AAIA,MAAMC,IAAc;AAEP,IAAAC,IAAN,cAA0CC,EAA0B;AAAA,EAY1E,cAAc;AACP,UAAA,GAbDC,EAAA,MAAAf,CAAA,GAKH,KAAQ,SAAmB,CAAC,GAG5B,KAAQ,YAAoB,GAE5B,KAAQ,gBAA+B,MAM7B,MAAA,2FAA2F,EAC5F,KAAK,CAAAgB,MAAYA,EAAS,MAAM,EAChC,KAAK,CAAQC,MAAA;AACJ,YAAAC,IAAiB,KAAKD,EAAK,OAAO;AACnC,WAAA,SAAS,KAAK,MAAMC,CAAc,GAClC,KAAA,aAAa,KAAK,MAAMC,EAAA,MAAKnB,MAAL,KAAuB,IAAA,CAAA,IAAI,KAAK,IAAA,KAAQ;AAAA,IAAA,CACxE,EACA,MAAM,OAAS,QAAQ,MAAMoB,CAAK,CAAC;AAAA,EAAA;AAAA,EAG5C,oBAAoB;AAChB,UAAM,kBAAkB,GACxBD,EAAA,MAAKnB,GAALC,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAGJ,uBAAuB;AACnB,UAAM,qBAAqB,GAC3BkB,EAAA,MAAKnB,GAALE,CAAA,EAAA,KAAA,IAAA;AAAA,EAAA;AAAA,EAsBJ,IAAI,oBAAoB;AACpB,QAAImB,IAAU,KAAK,MAAM,KAAK,SAAS;AACvC,UAAMC,IAAQ,KAAK,MAAMD,KAAW,KAAK,KAAK,KAAK,EAAE;AAC1C,IAAAA,KAAA,KAAK,KAAK,KAAK;AAC1B,UAAME,IAAO,KAAK,MAAMF,KAAW,KAAK,KAAK,GAAG;AAChD,IAAAA,KAAW,KAAK,KAAK;AACrB,UAAMG,IAAQ,KAAK,MAAMH,KAAW,KAAK,GAAG;AAC5C,IAAAA,KAAW,KAAK;AAChB,UAAMI,IAAU,KAAK,MAAMJ,IAAU,EAAE;AAC5B,WAAAA,KAAA,IAEJ,EAAE,OAAAC,GAAO,MAAAC,GAAM,OAAAC,GAAO,SAAAC,GAAS,SAAAJ,EAAQ;AAAA,EAAA;AAAA,EA2B5C,SAAS;AACjB,WAAOK,KAAQP,EAAK,MAAAnB,GAAAM,CAAA,EAAL,UAAoB,IAAIa,EAAA,MAAKnB,MAAL,KAAqB,IAAA,CAAA;AAAA,EAAA;AAkI9D;AAhOOA,IAAA,oBAAA,QAAA;AAoCHC,IAAe,WAAG;AACd,EAAI,KAAK,kBAEJ,KAAA,gBAAgB,YAAY,MAAM;AAC/B,IAAA,KAAK,YAAY,IACjB,KAAK,aAAa,IAElBkB,EAAA,MAAKnB,GAALE,CAAA,EAAA,KAAA,IAAA;AAAA,KAEH,GAAI;AACb;AAEAA,IAAc,WAAG;AACb,EAAI,KAAK,kBACL,cAAc,KAAK,aAAa,GAChC,KAAK,gBAAgB;AAE7B;AAgBHC,IAAgB,SAACwB,GAAoB;AAI/B,OAAA,eAAeA,EAAM,aAAa;AACxC;AAEGvB,IAAgB,WAAG;AAIf,WAHIwB,wBAAU,KAAK,GACfC,IAAc,KAAK,OAAO,CAAC,GAEtBC,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA,KAAK;AACzC,QAAIC,IAAc,KAAK,MAAM,KAAK,OAAOD,CAAC,CAAC;AAChD,IAAAC,IAAcH,EAAI,QAAQ,KAAKG,IAAc,KAAK,MAAMF,CAAW,MAChDA,IAAA,KAAK,OAAOC,CAAC;AAAA,EAC3B;AAEG,SAAAD;AACX;AAEAxB,IAAc,WAAG;AACb,SAAO,KAAK,aAAa,MAAO,KAAK,KAAK,KAAK;AACnD;AAMHC,IAAa,WAAG;AAER,SAAAoB;AAAA,qFAC4EP,EAAK,MAAAnB,GAAAK,CAAA,EAAL,KAAwB,IAAA,IAAA,YAAY,EAAE;AAAA;AAAA;AAAA;AAI1H;AAEAE,IAAc,WAAG;AACT,SAAAmB;AAAA,2DACkDP,QAAKnB,GAAgBG,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA,8BAIlDgB,EAAA,MAAKnB,MAAL,KAAkB,IAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW/C;AAEGQ,IAAW,WAAG;AACA,QAAAqB,IAAcV,QAAKnB,GAALI,CAAA,EAAA,KAAA,IAAA;AAGhB,MAAA4B,wBAAY,KAAK;AACrB,EAAAA,EAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AAErB,MAAAC,IAAkB,IAAI,KAAKJ,CAAW;AAG1C,MAFAI,EAAgB,SAAS,GAAG,GAAG,GAAG,CAAC,GAE/BA,EAAgB,QAAA,MAAcD,EAAM;AAEpC,WAAOb,QAAKnB,GAALU,CAAA,EAAA,KAAA,IAAA;AAIP,MAAAwB,IAAS,KAAK,MAAML,CAAW,GAC/BD,wBAAU,KAAK;AAEnB,SAAI,MAAMM,CAAM,KAAKA,KAAUN,EAAI,YACxBT,QAAKnB,GAALS,CAAA,EAAA,KAAA,IAAA,IAGJU,QAAKnB,GAALW,CAAA,EAAA,KAAA,IAAA;AACX;AAEJF,IAAuB,WAAG;AACf,SAAAiB;AACX;AAEAhB,IAAoB,WAAG;AACZ,SAAAgB;AACX;AAEAf,IAA0B,WAAG;AACzB,QAAM,EAAE,OAAAW,GAAO,MAAAC,GAAM,OAAAC,GAAO,SAAAC,GAAS,SAAAJ,EAAA,IAAY,KAAK,mBAChDc,IAAuB,IAAI,KAAKhB,QAAKnB,GAALI,CAAA,EAAA,KAAA,IAAA,CAAuB,EAAE,mBAAmB,SAAS,EAAE,SAAS,QAAQ,MAAM,WAAW,OAAO,QAAQ,KAAK,WAAW;AAEvJ,SAAAsB;AAAA;AAAA;AAAA,kBAGGJ,IAAQ,IAAII,IAAOJ,CAAK,wBAAwB,EAAE;AAAA,kBAClDC,IAAO,IAAIG,IAAOH,CAAI,yBAAyB,EAAE;AAAA,kBACjDC,IAAQ,IAAIE,IAAOF,CAAK,0BAA0B,EAAE;AAAA,kBACpDC,CAAO;AAAA,kBACPJ,CAAO;AAAA;AAAA,oBAELc,CAAoB;AAAA;AAEpC;AA9KStB,EAgLI,SAAyB,CAACC,EAA0B,QAAQsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA+CpE;AA1NGC,EAAA;AAAA,EADPC,EAAM;AAAA,GAJEzB,EAKD,WAAA,UAAA,CAAA;AAGAwB,EAAA;AAAA,EADPC,EAAM;AAAA,GAPEzB,EAQD,WAAA,aAAA,CAAA;AARCA,IAANwB,EAAA;AAAA,EADNE,EAAc3B,CAAW;AAAA,GACbC,CAAA;"}